#!/usr/bin/env node
var er=Object.defineProperty;var h=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var tr=(e,t)=>{for(var r in t)er(e,r,{get:t[r],enumerable:!0})};import{Command as Vn}from"commander";import Wn from"figlet";import Je from"chalk";import he from"center-align";import rr from"ora";var or=async(e,t)=>{let r=rr({color:"cyan",text:t}).start(),o=await e();return r.stop(),o},S=or;import ue from"execa";import{existsSync as nr,pathExists as $e,readFileSync as ir,readJSON as sr}from"fs-extra";import ar from"globby";import _e from"path";import cr from"preferred-pm";var A=()=>{if(!nr("package.json"))throw new Error("./package.json not found");return JSON.parse(ir("package.json","utf8"))},D=()=>{let e=A();return Object.keys(e.dependencies||{})};var Fe=()=>{let e=A();return Object.keys(e.devDependencies||{})},lr=()=>[...D(),...D()],Z=()=>A().scripts,_=async()=>{var e;try{let t=await ue("npm",["ls","--depth=0","--json"],{reject:!1}),r=((e=JSON.parse(t.stdout))==null?void 0:e.dependencies)||{},o=Object.keys(r).filter(i=>i.startsWith("@refinedev")||i.startsWith("@pankod/refine-")),n=[];for(let i of o){let s=r[i].version;n.push({name:i,version:s})}return n}catch{return Promise.resolve(null)}},J=async()=>{let e=["ably","airtable","antd","appwrite","chakra-ui","codemod","core","devtools","devtools-internal","devtools-server","devtools-shared","devtools-ui","graphql","hasura","inferencer","kbar","mantine","medusa","mui","nestjs-query","nestjsx-crud","nextjs-router","react-hook-form","react-router-v6","react-table","remix-router","shared","simple-rest","strapi","strapi-v4","supabase"];try{let t=await ar("node_modules/@refinedev/*",{onlyDirectories:!0}),r=e.flatMap(n=>{try{let i=h.resolve(_e.join("@refinedev",n,"package.json"));return[_e.dirname(i)]}catch{return[]}}),o=[];return await Promise.all([...r,...t].map(async n=>{if(await $e(`${n}/package.json`)){let s=await sr(`${n}/package.json`);o.push({name:s.name,version:s.version,path:n})}})),o}catch{return[]}},Ue=async e=>await $e(`${e}/refine.config.js`),j={npm:{install:["install","--save"],installDev:["install","--save-dev"],outdatedJson:["outdated","--json"]},yarn:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--json"]},pnpm:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--format","json"]},bun:{install:["add"],installDev:["add","--dev"],outdatedJson:["outdated","--format","json"]}},E=async()=>{let e=await S(()=>cr(process.cwd()),"Getting package manager...");if(!e)throw new Error("Package manager not found.");return e},Q=async e=>{let t=await E();try{let r=j[t.name].install,o=ue(t.name,[...r,...e],{stdio:"inherit"});o.on("message",n=>{console.log(n)}),o.on("error",n=>{console.log(n)}),o.on("exit",n=>{if(n===0){console.log("All `Refine` packages updated  \u{1F389}");return}console.log(`Application exited with code ${n}`)})}catch(r){throw new Error(r)}},fe=async e=>{let t=await E();try{let r=j[t.name].install,o=ue.sync(t.name,[...r,...e],{stdio:"inherit"});if(o.failed||o.exitCode!==0)throw new Error(o.stderr);return o}catch(r){throw new Error(r)}},Be=e=>{let t=e.lastIndexOf("@");return t<=0?{name:e,version:null}:{name:e.slice(0,t),version:e.slice(t+1)}},Me=()=>{var t;let e=A();return(t=e==null?void 0:e.refine)==null?void 0:t.projectId},ee=async()=>(await J()).some(t=>t.name==="@refinedev/devtools"),pr=e=>{let t=D();return e.filter(r=>!t.includes(r))},ze=async e=>{console.log("\u{1F331} Checking dependencies...");let t=pr(e);t.length>0?(console.log(`\u{1F331} Installing ${t.join(", ")}`),await fe(t),console.log("\u{1F389} Installation complete...")):console.log("\u{1F389} All required packages are already installed")},Le=e=>{let t=lr(),r=e.filter(o=>t.includes(o));return r.length>0?(console.log(`\u{1F6A8} This feature doesn't support ${r.join(", ")} package.`),!0):!1};import mr from"cli-table3";import te from"chalk";var Ve=e=>e.charAt(0).toUpperCase()+e.slice(1),We=e=>e.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,"");var X={name:"name",current:"current",wanted:"wanted",latest:"latest",changelog:"changelog"},ge=[X.name,X.current,X.wanted,X.latest,X.changelog],re=(e=[])=>{var R;let t=Object.keys((e==null?void 0:e[0])||{});if(!e||!t.length)return{table:"",width:0};let r=process.stdout.columns||80,o=Math.max(...e.map(l=>l.name.length))+2,n=7+2,i=6,s=Math.min(35,r-o-n*3-i),c={name:o,current:n,wanted:n,latest:n,changelog:s},g=new mr({head:ge,wordWrap:!1,wrapOnWordBoundary:!0,colWidths:ge.map(l=>c[l]),style:{head:["blue"]}}),p=(l,a)=>{if(l.length>a){let m=a-3,d=l.slice(0,Math.floor(m/2)),v=l.slice(-Math.ceil(m/2));return`${d}...${v}`}return l};e.forEach(l=>{g.push(ge.map(a=>{let m=l[a];if(!m)return m;if(a==="latest"||a==="wanted"){let d=qe(l.current),v=qe(m),y=dr(d,v),N=te[y.major](v.major),b=te[y.minor](v.minor),q=te[y.patch](v.patch);return`${N}.${b}.${q}`}return a==="changelog"?te.blueBright.underline(m):m}))});let u=g.toString(),P=We(((R=u.split(`
`))==null?void 0:R[0])||"").length;return{table:u,width:P}},qe=e=>{let t=e.split(".");return{major:t[0],minor:t[1],patch:t[2]}},dr=(e,t)=>e.major.trim()!==t.major.trim()?{major:"red",minor:"red",patch:"red"}:e.minor.trim()!==t.minor.trim()?{major:"white",minor:"yellow",patch:"yellow"}:e.patch.trim()!==t.patch.trim()?{major:"white",minor:"white",patch:"green"}:{major:"white",minor:"white",patch:"white"};var oe=async e=>{let t=e==null?void 0:e.data,r=Object.keys((t==null?void 0:t[0])||{});if(!t||!r.length)return;let{table:o,width:n}=re(t);console.log(),console.log(he("Update Available",n)),console.log(o),console.log(he(`To update ${Je.bold("`Refine`")} packages with wanted version`,n)),console.log(he(` Run the following command: ${Je.yellowBright(await ur())}`,n)),console.log()},ur=async()=>{let e="npx @refinedev/cli update",t=D(),r=Object.keys(Z()),o=t.includes("@refinedev/cli"),n=r.includes("refine");if(!o&&!n)return e;let i=await E();return n?`${i.name} run refine update`:o?"npx refine update":e};import fr from"execa";import gr from"semver-diff";var hr=e=>e.command("check-updates").description("Check all installed `Refine` packages are up to date").action(vr),vr=async()=>{let e=await S(H,"Checking for updates...");if(!e.length){console.log("All `Refine` packages are up to date \u{1F389}\n");return}await oe({data:e})},H=async()=>await yr(),yr=async()=>{let e=await wr();if(!e)return[];let t=[],r;return Object.keys(e).forEach(n=>{let i=e[n];n.includes("@refinedev")&&(r=n.replace(/@refinedev\//,"https://c.refine.dev/"),t.push({name:n,current:i.current,wanted:i.wanted,latest:i.latest,changelog:r}))}),t.filter(n=>!!gr(n.current,n.latest))},wr=async()=>{let e="npm",{stdout:t,timedOut:r}=await fr(e,j[e].outdatedJson,{reject:!1,timeout:25e3});if(r)throw new Error("Timed out while checking for updates.");return t?JSON.parse(t):null},Xe=hr;var w=(c=>(c.REACT_SCRIPT="react-scripts",c.REMIX="remix",c.NEXTJS="nextjs",c.VITE="vite",c.CRACO="craco",c.PARCEL="parcel",c.UNKNOWN="unknown",c))(w||{});var ve=(n=>(n.ANTD="antd",n.MUI="mui",n.MANTINE="mantine",n.CHAKRA="chakra-ui",n))(ve||{});var He=(o=>(o.NPM="npm",o.YARN="yarn",o.PNPM="pnpm",o))(He||{});var f=e=>{if(e)return e;let t=D(),r=Fe();return t.includes("@craco/craco")||r.includes("@craco/craco")?"craco":t.includes("react-scripts")||r.includes("react-scripts")?"react-scripts":t.includes("next")||r.includes("next")?"nextjs":t.includes("@remix-run/react")||r.includes("@remix-run/react")?"remix":t.includes("vite")||r.includes("vite")?"vite":t.includes("parcel")||r.includes("parcel")?"parcel":"unknown"},Ye=()=>{let e=D();if(e.includes("@refinedev/antd"))return"antd";if(e.includes("@refinedev/mui"))return"mui";if(e.includes("@refinedev/chakra-ui"))return"chakra-ui";if(e.includes("@refinedev/mantine"))return"mantine"};var Y=e=>{switch(e){case"nextjs":return{path:"src/components",alias:"../src/components"};case"remix":return{path:"app/components",alias:"~/components"}}return{path:"src/pages",alias:"pages"}},Ke=e=>{switch(e){case"nextjs":return{path:"src/providers",alias:"../src/providers"};case"remix":return{path:"app/providers",alias:"~/providers"}}return{path:"src/providers",alias:"providers"}},Ge=e=>{switch(e){case"remix":return"./app";default:return"./src"}};import $ from"handlebars";import{readFileSync as xr,readdirSync as Pr,createFileSync as Ir,writeFileSync as Cr,unlinkSync as Rr}from"fs-extra";var br=(e,t)=>{let r=xr(e);return $.registerHelper("ifIn",(n,i,s)=>n.includes(i)?s.fn($):s.inverse($)),$.registerHelper("formatInferencerComponent",n=>{if(n)switch(n){case"chakra-ui":return"ChakraUI";default:return n.charAt(0).toUpperCase()+n.slice(1)}}),$.registerHelper("capitalize",n=>{if(n)return n.charAt(0).toUpperCase()+n.slice(1)}),$.compile(r.toString())(t)},Ze=(e,t)=>{Pr(e).forEach(o=>{let n=`${e}/${o}`,i=`${e}/${o.replace(".hbs","")}`;Ir(i),Cr(i,br(n,t)),Rr(n)})};import Er from"execa";import{copySync as kr,mkdirSync as Tr,moveSync as Nr,pathExistsSync as Qe,unlinkSync as Sr}from"fs-extra";import Dr from"inquirer";import{join as et}from"path";import{plural as Ar}from"pluralize";import ye from"temp";var ne=["list","create","edit","show"],F=async(e,t)=>{var n;let r=(e==null?void 0:e.path)||Y(f()).path,o=e.actions||ne.join(",");if(!t.length){let{name:i,selectedActions:s}=await Dr.prompt([{type:"input",name:"name",message:"Resource Name (users, products, orders etc.)",validate:c=>c?!0:"Resource Name is required"},{type:"checkbox",name:"selectedActions",message:"Select Actions",choices:ne,default:(n=e==null?void 0:e.actions)==null?void 0:n.split(",")}]);t=[i],o=s.join(",")}t.forEach(i=>{let s=o?o.split(","):void 0,c=Ar(i).toLowerCase(),g=et(process.cwd(),r,c);if(Qe(g)){console.error(`\u274C Resource (${et(r,c)}) already exist!`);return}let p=Ve(i),u=Ye(),P=`${__dirname}/../templates/resource`,R=jr();kr(P,R);let l={resourceName:i,resource:p,actions:s||ne,uiFramework:u};Ze(R,l),s&&ne.forEach(y=>{s.includes(y)||Sr(`${R}/${y}.tsx`)}),Tr(r,{recursive:!0});let a=`${r}/${c}`,m={};Qe(a)&&(m={overwrite:!0}),Nr(R,a,m),ye.cleanupSync();let d=h.resolve(".bin/jscodeshift"),{stderr:v}=Er.sync(d,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/resource.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist",`--__actions=${l.actions}`,`--__pathAlias=${Y(f()).alias}`,`--__resourceFolderName=${c}`,`--__resource=${p}`,`--__resourceName=${i}`]);v&&console.log(v),console.log(`\u{1F389} Resource (${a}) generated successfully!`)})},jr=()=>(ye.track(),ye.mkdirSync("resource"));var Or=e=>{let t=f(),{path:r}=Y(t);return e.command("create-resource").allowExcessArguments(!0).description('Create a new resource files (deprecated, please use "add resource" command)').option("-a, --actions [actions]","Only generate the specified actions. (ex: list,create,edit,show)","list,create,edit,show").option("-p, --path [path]","Path to generate the resource files",r).action(_r)},_r=async(e,t)=>{F(e,t.args)},tt=Or;import{Option as Xr}from"commander";import Ur from"conf";import Br from"chalk";import*as rt from"dotenv";rt.config();var $r={development:/dev/i,production:/prod/i,test:/test|tst/i,"continuous-integration":/ci/i,"user-acceptance-testing":/uat/i,"system-integration-testing":/sit/i},Fr=()=>{let e=process.env.NODE_ENV;if(!e)return"development";let t="custom";for(let[r,o]of Object.entries($r))if(o.test(e)){t=r;break}return t},U={NODE_ENV:Fr(),REFINE_NO_TELEMETRY:process.env.REFINE_NO_TELEMETRY||"false",UPDATE_NOTIFIER_IS_DISABLED:process.env.UPDATE_NOTIFIER_IS_DISABLED||"false",UPDATE_NOTIFIER_CACHE_TTL:process.env.UPDATE_NOTIFIER_CACHE_TTL||1e3*60*60*24,REFINE_PROXY_DOMAIN:process.env.REFINE_PROXY_DOMAIN||"https://refine.dev",REFINE_PROXY_TARGET:process.env.REFINE_PROXY_TARGET||"http://localhost:3000",REFINE_PROXY_PORT:process.env.REFINE_PROXY_PORT||"7313",REFINE_PROXY_REWRITE_URL:process.env.REFINE_REWRITE_URL||"http://localhost:7313"};var ot=e=>typeof btoa<"u"?btoa(e):Buffer.from(e).toString("base64");var Mr="refine-update-notifier",k=new Ur({projectName:Mr,defaults:{key:"",lastUpdated:0,packages:[]}}),B=async()=>{if(qr())return;let e=await Lr();if(e!==null){if(e){nt();return}zr(),nt()}},zr=async()=>{let e=k.get("packages");e!=null&&e.length&&(await oe({data:e}),console.log(`
`))},Lr=async()=>{let e=await Wr(),t=Vr();return e===null?null:!!(t||!e)},nt=async()=>{try{let e=await H();return k.set("packages",e),k.set("lastUpdated",Date.now()),k.set("key",await it()),e}catch{return k.set("packages",[]),k.set("lastUpdated",Date.now()),k.set("key",""),null}},Vr=()=>{let e=k.get("lastUpdated");if(!e)return!0;let r=Date.now()-e,o=Number(U.UPDATE_NOTIFIER_CACHE_TTL);return r>=o},Wr=async()=>{let e=k.get("key"),t=await it();return t===null?null:e===t},it=async()=>{let e=await _();if(!e)return console.error(Br.red("Something went wrong when trying to get installed `Refine` packages.")),null;let t=e.map(o=>`${o.name}@${o.version}`);return ot(t.toString())},qr=()=>U.UPDATE_NOTIFIER_IS_DISABLED.toLocaleLowerCase()==="true";var I={["react-scripts"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>h.resolve(".bin/react-scripts")},["vite"]:{getDev:e=>["dev",...e],getStart:e=>["preview",...e],getBuild:e=>["build",...e],getBin:()=>h.resolve(".bin/vite")},["nextjs"]:{getDev:e=>["dev",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>h.resolve(".bin/next")},["remix"]:{getDev:e=>["dev",...e],getStart:e=>(e==null?void 0:e.length)?e:(console.log(),console.warn("\u{1F6A8} Remix requires a path to the entry file. Please provide it as an argument to `refine start` command in package.json scripts"),console.warn("Refine will use `./build/index.js` as default"),console.warn("Example: `refine start ./build/index.js`"),console.log(),["./build/index.js"]),getBuild:e=>["build",...e],getBin:e=>{let t=e==="start"?"remix-serve":"remix";return h.resolve(`.bin/${t}`)}},["craco"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>h.resolve(".bin/craco")},["parcel"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>h.resolve(".bin/parcel")},["unknown"]:{getDev:e=>[...e],getStart:e=>[...e],getBuild:e=>[...e],getBin:()=>"unknown"}};import Jr from"execa";var T=async(e,t)=>{var o,n;if(e==="unknown"){let i=Object.values(w).filter(s=>s!=="unknown").join(", ");console.error(`We couldn't find executable for your project. Supported executables are ${i}.
Please use your own script directly. If you think this is an issue, please report it at: https://github.com/refinedev/refine/issues`);return}let r=Jr(e,t,{stdio:"pipe",windowsHide:!1,env:{FORCE_COLOR:"true",...process.env}});return(o=r.stdout)==null||o.pipe(process.stdout),(n=r.stderr)==null||n.pipe(process.stderr),await r};var M=e=>{let t=f(),r=[];switch(e){case"dev":r=I[t].getDev([""]);break;case"start":r=I[t].getStart([""]);break;case"build":r=I[t].getBuild([""]);break}return t==="remix"&&e==="start"&&(t="remix-serve"),`It runs: \`${t} ${r.join(" ")}\`. Also accepts all the arguments \`${t}\` accepts.`},z=()=>`Platform to run command on. 
ex: ${Object.values(w).join(", ")}`;var Hr=e=>e.command("start").description(M("start")).allowUnknownOption(!0).addOption(new Xr("-p, --platform <platform>",z()).choices(Object.values(w).filter(t=>t!=="unknown"))).argument("[args...]").action(Yr),Yr=async(e,{platform:t})=>{let r=f(t),o=I[r].getBin("start"),n=I[r].getStart(e);await B(),T(o,n)},we=Hr;import{Option as dt}from"commander";import{server as Qr}from"@refinedev/devtools-server";import Zr from"execa";import{format as Kr,resolveConfig as Gr}from"prettier";var xe=async e=>{try{let t=await Gr(process.cwd());return Kr(e,{...t??{},parser:"typescript"})}catch{return e}};var st=async()=>{let e=h.resolve(".bin/jscodeshift"),{stderr:t}=Zr.sync(e,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/add-devtools-component.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist"]);t&&console.log(t)};var at=()=>{let t=A().scripts||{};return{dev:((t==null?void 0:t.dev)||"").match(/refine dev(\s|$|;){1}/)!==null}};import eo from"boxen";import to from"cardinal";import ct from"chalk";import{Argument as ro}from"commander";import oo from"dedent";import Ie from"semver";var no=["start","init"],io="start",lt="4.42.0",so=e=>e.command("devtools").description("Start or install Refine Devtools server; it starts on port 5001.").addArgument(new ro("[command]","devtools related commands").choices(no).default(io)).addHelpText("after",`
Commands:
    start     Start Refine Devtools server
    init      Install Refine Devtools client and adds it to your project
`).action(ao),ao=async e=>{switch(e){case"start":Ce();return;case"init":co();return}},co=async()=>{var n;let e=await Pe();if(await S(ee,"Checking if devtools is installed...")){console.log("\u{1F389} Refine Devtools is already installed");return}if(e&&await pt({pkg:e}))return;console.log("\u{1F331} Installing Refine Devtools...");let r=["@refinedev/devtools@latest"];if((!e||Ie.lt(e.version,lt))&&(r.push("@refinedev/core@latest"),console.log("\u{1F331} Refine core package is being updated for devtools...")),await fe(r),console.log(""),console.log(""),console.log("\u{1F331} Adding devtools component to your project...."),await st(),console.log("\u2705 Refine Devtools package and components added to your project"),r.includes("@refinedev/core@latest")){let i=await Pe();console.log(`\u2705 Refine core package updated from ${(e==null?void 0:e.version)??"unknown"} to ${(i==null?void 0:i.version)??"unknown"}`),console.log(`   Changelog: ${ct.underline.blueBright(`https://c.refine.dev/core#${(e==null?void 0:e.version.replaceAll(".",""))??""}`)}`)}console.log("");let{dev:o}=at();if(o){console.log(`\u{1F64C} You're good to go. "npm run dev" will automatically starts the devtools server.`),console.log('\u{1F449} You can also start the devtools server manually by running "refine devtools start"');return}if(!o){let i=(n=A().scripts)==null?void 0:n.dev;console.log('\u{1F6A8} Your have modified the "dev" script in your package.json. Because of that, "npm run dev" will not start the devtools server automatically.'),console.log('\u{1F449} You can append "refine devtools" to "dev" script'),console.log('\u{1F449} You can start the devtools server manually by running "refine devtools"'),console.log(""),console.log(eo(to.highlight(oo(`
                {
                    "scripts": {
                        "dev": "${i} & refine devtools",
                        "refine": "refine"
                    }
                }  
        `)),{padding:1,title:"package.json",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"}))}},Ce=async({exitOnError:e=!0}={})=>{let t=await Pe();if(t){if(await pt({pkg:t}))return;if(Ie.lt(t.version,lt)){console.log(`\u{1F6A8} You're using an old version of Refine(${t.version}). Refine version should be @4.42.0 or higher to use devtools.`);let r=await E();console.log(`\u{1F449} You can update @refinedev/core package by running "${r.name} run refine update"`);return}}Qr({onError:()=>{e&&process.exit(1)}}).catch(r=>{})},Pe=async()=>{let e=await J(),t=e==null?void 0:e.find(r=>r.name==="@refinedev/core"||r.name==="@pankod/refine-core");if(t)return t},pt=async({pkg:e})=>e.name==="@pankod/refine-core"||Ie.lt(e.version,"4.0.0")?(console.log(`\u{1F6A8} You're using an old version of Refine(${e.version}). Refine version should be @4.42.0 or higher to use devtools.`),console.log("You can follow migration guide to update Refine."),console.log(ct.blue("https://refine.dev/docs/migration-guide/3x-to-4x/")),!0):!1,mt=so;var lo=e=>e.command("dev").description(M("dev")).allowUnknownOption(!0).addOption(new dt("-p, --platform <platform>",z()).choices(Object.values(w).filter(t=>t!=="unknown"))).addOption(new dt("-d, --devtools <devtools>","Start Refine Devtools server").default("true","true if devtools is installed")).argument("[args...]").action(po),po=async(e,{platform:t,...r})=>{let o=f(t),n=I[o].getBin("dev"),i=I[o].getDev(e);await B();let s=await ee();(r.devtools==="false"?!1:s)&&Ce({exitOnError:!1}),T(n,i)},Re=lo;import{Option as mo}from"commander";var uo=e=>e.command("build").description(M("build")).allowUnknownOption(!0).addOption(new mo("-p, --platform <platform>",z()).choices(Object.values(w).filter(t=>t!=="unknown"))).argument("[args...]").action(fo),fo=async(e,{platform:t})=>{let r=f(t),o=I[r].getBin("build"),n=I[r].getBuild(e);await B();try{await T(o,n)}catch{process.exit(1)}},be=uo;import ut from"chalk";var go=e=>e.command("run").description("Runs a defined package script. If no `command` is provided, it will list the available scripts").allowUnknownOption(!0).argument("[command] [args...]").action(ho),ho=async e=>{let[t,...r]=e,o=Z();if(!t){console.log(`Available via ${ut.blue("`refine run`")}:
`);for(let[s,c]of Object.entries(o))console.log(`  ${s}`),console.log(`    ${ut.dim(c)}`),console.log();return}if(!Object.keys(o).includes(t)){let s=`${process.cwd()}/node_modules/.bin/${t}`;T(s,r);return}let i=await E();T(i.name,["run",t,...r])},Ee=go;import Et from"path";import V from"chalk";import ae from"inquirer";import $o from"inquirer-autocomplete-prompt";import{ensureFile as Fo,pathExists as kt,readFile as Uo,writeFile as Bo}from"fs-extra";import xt from"path";import Co from"path";var ke={};tr(ke,{PackageManagerTypes:()=>He,ProjectTypes:()=>w,UIFrameworks:()=>ve,appendAfterImports:()=>vt,getFileContent:()=>ie,getImports:()=>L,getNameChangeInImport:()=>gt});var vo=/import(?:\s+(type))?\s*(?:([^\s\{\},]+)\s*(?:,\s*)?)?(\{[^}]+\})?\s*(?:\*\s*as\s+([^\s\{\}]+)\s*)?from\s*['"]([^'"]+)['"];?/g,yo=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,L=e=>{let t=e.matchAll(vo),r=[];for(let o of t){let[n,i,s,c,g,p]=o;r.push({isType:i==="type",statement:n,importPath:p,...s&&{defaultImport:s},...c&&{namedImports:c},...g&&{namespaceImport:g}})}return r==null?void 0:r.filter(Boolean)},gt=e=>{let t=e.matchAll(yo),r=[];for(let o of t){let[n,i,s,c,g]=o;r.push({statement:n,fromName:i.trim(),toName:c.trim(),afterCharacter:g})}return r},wo=(e,t)=>{var i;let r=e.substring(0,e.indexOf(t.statement)),o=L(r).pop();return o?r.substring(r.indexOf(o==null?void 0:o.statement)+((i=o==null?void 0:o.statement)==null?void 0:i.length)):r},xo=(e,t)=>!!(t?wo(e,t):"").trim(),ft=["react","@refinedev/core","@refinedev/"],ht=e=>{var l;let t=e,r=L(e),o=r.filter(a=>!a.isType),n=r.filter(a=>a.isType),i=[],s=[];n.forEach(a=>{t=t.replace(`${a.statement}
`,"")}),o.forEach(a=>{xo(t,a)?i.push(a):s.push(a)});let c=t.indexOf((l=s==null?void 0:s[0])==null?void 0:l.statement);s.forEach(a=>{t=t.replace(a.statement,"")});let g=s.reduce((a,m)=>{let{importPath:d}=m;return a[d]?a[d].push(m):a[d]=[m],a},{}),P=[...Object.entries(g).map(([a,m])=>{let d=m.find(b=>b.defaultImport),v=m.find(b=>b.namespaceImport),y=m.filter(b=>b.namedImports).map(b=>(b.namedImports??"").replace(/{|}/g,"").trim().split(",").map(de=>de.trim()).filter(Boolean).join(", ")).join(", "),N="";return v&&(N+=`${v.statement}
`),(d||y)&&(d&&y?N+=`import ${d.defaultImport}, { ${y} } from "${m[0].importPath}";
`:d?N+=`import ${d.defaultImport} from "${m[0].importPath}";
`:N+=`import { ${y} } from "${m[0].importPath}";
`),[a,N]})].sort(([a],[m])=>{let d=ft.findIndex(y=>a.includes(y)),v=ft.findIndex(y=>m.includes(y));return d===v?a.localeCompare(m):d===-1?1:v===-1?-1:d-v}).map(([,a])=>a).join(""),R=[...n.map(a=>a.statement),""].join(`
`);return t=t.substring(0,c)+P+R+t.substring(c),t};var vt=(e,t)=>{let r=L(e),o=r[r.length-1],n=o?e.indexOf(o.statement):e.length-1;return`${e.slice(0,n+(o==null?void 0:o.statement.length))}
${t}
${e.slice(n+(o==null?void 0:o.statement.length))}`};import{readFileSync as Po}from"fs-extra";import{join as Io}from"path";function ie(e){if(this!=null&&this.absolutePackageDir)try{return Po(Io(this.absolutePackageDir,e)).toString()}catch{return}}var yt=h("module"),Ro=yt.prototype.require,wt=(e,t)=>{yt.prototype.require=function(...r){return r[0]==="@refinedev/cli"?{...ke,getFileContent:o=>ie.call({absolutePackageDir:t?e:Co.join(process.cwd(),e)},o)}:Ro.apply(this,r)}};var Te=async(e,t)=>{try{return wt(e,t),h(xt.join(t?e:xt.join(process.cwd(),e),"refine.config.js"))}catch{return}};import Do from"dedent";var C={SUCCESS:"SUCCESS",UNKNOWN_ERROR:"UNKNOWN_ERROR",SOURCE_PATH_NOT_FOUND:"SOURCE_PATH_NOT_FOUND",TARGET_PATH_NOT_FOUND:"TARGET_PATH_NOT_FOUND",SOURCE_PATH_NOT_A_FILE:"SOURCE_PATH_NOT_A_FILE",TARGET_ALREADY_EXISTS:"TARGET_ALREADY_EXISTS"};import x from"chalk";import bo from"chalk";import Eo from"cardinal";import ko from"boxen";var To=e=>{let t=/^(?:\/\/\s?title:\s?)(.*?)\n/g,[r,o]=t.exec(e)??[];if(o){let n=o.trim(),i=e.replace(r||"","");return{title:n,code:i}}return{code:e}},Pt=e=>{let{title:t,code:r}=To(e),o="";try{o=Eo.highlight(r,{jsx:!0})}catch{o=r}return ko(o,{padding:1,margin:0,borderStyle:"round",borderColor:"gray",titleAlignment:"left",title:t?bo.bold(t):void 0})};import{marked as No}from"marked";import So from"marked-terminal";var se=e=>No(e,{renderer:new So({code:Pt})});var It=({label:e,files:t,message:r="**`Warning:`** You should use the component where you want to use it."})=>{let o=t.filter(([,p])=>Object.values(C).filter(u=>u!==C.SUCCESS).includes(p)),n="success";switch(o.length){case 0:n="success";break;case t.length:n="error";break;default:n="warning";break}let i=p=>{let u=p==null?void 0:p.replace(process.cwd(),"");return u!=null&&u.startsWith("/")?u.slice(1):u!=null&&u.startsWith("./")?u.slice(2):u},s=()=>{switch(n){case"success":console.log(x.blueBright(`Successfully swizzled ${x.bold(e)}`));return;case"warning":console.log(x.yellowBright(`Swizzle completed with errors for ${x.bold(e)}`));return;case"error":console.log(x.redBright(`Swizzle failed for ${x.bold(e)}`));return;default:return}},c=()=>{let p=[];p.push(x.dim(`File${t.length>1?"s":""} created:`)),p.push(t.map(([u,P])=>P===C.SUCCESS?x.cyanBright.dim(` - ${i(u)}`):P===C.TARGET_ALREADY_EXISTS?x.cyanBright.dim(` - ${x.yellowBright.bold("[FILE_ALREADY_EXISTS] ")}${i(u)}`):P===C.SOURCE_PATH_NOT_A_FILE?x.cyanBright.dim(` - ${x.yellowBright.bold("[SOURCE NOT FOUND] ")}${i(u)}`):x.cyanBright.dim(` - ${x.yellowBright.bold(`[${P}]`)}${i(u)}`)).join(`
`)),console.log(p.join(`
`))},g=()=>{r&&n!=="error"&&console.log(se(Do(`
${r}`)))};console.log(""),s(),c(),console.log(""),g()};var Ct=e=>{let t=/(\/\/|\/\*)(\s?)swizzle-remove-start([\s\S]*?)(\/\/|\/\*)(\s?)swizzle-remove-end(\s*)(\*\/)?/g;return e.replace(t,"")};import Mo from"boxen";var Rt=()=>{let e;try{e=f()}catch{e=void 0}return Ge(e)};import Ao from"inquirer";import jo from"chalk";var bt=async e=>{await Oo(e)?await Q(e):await _o(e)},Oo=async e=>{let t=`This component requires following packages to be installed:
`.concat(e.map(o=>` - ${o}`).join(`
`)).concat(`
Do you want to install them?`),{installRequiredPackages:r}=await Ao.prompt([{type:"confirm",name:"installRequiredPackages",default:!0,message:t}]);return r},_o=async e=>{let t=await E(),r=j[t.name].install.join(" "),o=e.join(" "),n=`${t.name} ${r} ${o}`;console.log(`
You can install them manually by running this command:`),console.log(jo.bold.blueBright(n))};var zo=e=>e.command("swizzle").description(`Export a component or a function from ${V.bold("Refine")} packages to customize it in your project`).action(Lo),Tt=e=>(t,r="")=>e.filter(n=>{var i;return n.label.toLowerCase().includes(r.toLowerCase())||((i=n.group)==null?void 0:i.toLowerCase().includes(r.toLowerCase()))}).flatMap((n,i,s)=>{var p;return[...(n==null?void 0:n.group)&&((p=s[i-1])==null?void 0:p.group)!==n.group&&n.group?[new ae.Separator(V.bold(n.group))]:[],{name:` ${n.label}`,value:n!=null&&n.value?n.value:n}]}),Lo=async e=>{var u,P,R;ae.registerPrompt("autocomplete",$o);let t=await J(),r=[];if(await Promise.all(t.map(async l=>{let a=await Ue(l.path),m=r.findIndex(d=>d.name===l.name)===-1;a&&m&&r.push(l)})),r.length===0){console.log("No Refine packages found with swizzle configuration.");return}console.log(`${Mo(`Found ${V.blueBright(r.length)} installed ${V.blueBright.bold("Refine")} packages with swizzle configuration.`,{padding:1,textAlignment:"center",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"})}
`);let o=await Promise.all(r.map(async l=>{let a=await Te(l.path,!0)??await Te(l.path,!1)??{swizzle:{items:[]}};return{...l,config:a}})),{selectedPackage:n}=await ae.prompt([{type:"autocomplete",pageSize:10,name:"selectedPackage",message:"Which package do you want to swizzle?",emptyText:"No packages found.",source:Tt(o.sort((l,a)=>{var m,d;return(((m=l.config)==null?void 0:m.group)??"").localeCompare(((d=a.config)==null?void 0:d.group)??"")}).map(l=>{var a,m;return{label:((a=l.config)==null?void 0:a.name)??l.name,value:l,group:(m=l.config)==null?void 0:m.group}}))}]),{swizzle:{items:i,transform:s}}=n.config,c;if(i.length===0){console.log(`No swizzle items found for ${V.bold(((u=n.config)==null?void 0:u.name)??n.name)}`);return}if(i.length===1?c=i[0]:i.length>1&&(c=(await ae.prompt([{type:"list",pageSize:10,name:"selectedComponent",message:"Which component do you want to swizzle?",emptyText:"No components found.",choices:Tt(i.sort((a,m)=>a.group.localeCompare(m.group)))({},"")}])).selectedComponent),!c){console.log(`No swizzle items selected for ${V.bold(((P=n.config)==null?void 0:P.name)??n.name)}`);return}let g=Rt(),p=await Promise.all(c.files.map(async l=>{var a;try{let m=l.src?Et.join(n.path,l.src):void 0,d=l.dest?Et.join(process.cwd(),g,l.dest):void 0;if(!m)return console.log("No src path found for file",l),["",C.SOURCE_PATH_NOT_FOUND];if(!d)return console.log("No destination path found for file",l),["",C.TARGET_PATH_NOT_FOUND];if(!await kt(m))return[d,C.SOURCE_PATH_NOT_A_FILE];let y=await Uo(m,"utf-8");if(await kt(d))return[d,C.TARGET_ALREADY_EXISTS];await Fo(d);let b=Ct(y),q=((a=l.transform)==null?void 0:a.call(l,b))??b,de=(s==null?void 0:s(q,m,d))??q,Zt=ht(de),Qt=await xe(Zt);return await Bo(d,Qt),[d,C.SUCCESS]}catch{return["",C.UNKNOWN_ERROR]}}));p.length>0&&(It({files:p,label:c.label,message:c.message}),(R=c==null?void 0:c.requiredPackages)!=null&&R.length&&await bt(c.requiredPackages))},Nt=zo;import Jo from"inquirer";import Xo from"center-align";import{Option as Ho}from"commander";import K from"inquirer";import Dt from"semver-diff";import Ne from"chalk";var St=e=>{let t=e.filter((o,n)=>e.indexOf(o)!==n),r=new Set(t);return Array.from(r)};var At=async e=>{let t=Wo(e);if(!t){console.log("All `Refine` packages are up to date. \u{1F389}");return}let r=qo(t),o=await K.prompt([{type:"checkbox",name:"packages",message:"Choose packages to update",pageSize:r.pageSize,choices:r.choices,validate:Vo}]);return o.packages.length>0?o.packages:null},Vo=e=>{let r=e.map(n=>Be(n)).map(n=>n.name),o=St(r);return o.length>0?`You can't update the same package more than once. Please choice one.
 Duplicates: ${o.join(", ")}`:!0},Wo=e=>{if(e.length===0)return null;let t={patch:[],minor:[],major:[]};return e.forEach(r=>{let o=r.current,n=Dt(o,r.wanted),i=Dt(o,r.latest);if(n===i&&i){t[i].push({name:r.name,from:o,to:r.latest});return}n&&t[n].push({name:r.name,from:o,to:r.wanted}),i&&t[i].push({name:r.name,from:o,to:r.latest})}),t},qo=e=>{let t=0,r=0;[e.patch,e.minor,e.major].forEach(p=>{p.forEach(u=>{u.name.length>t&&(t=u.name.length),u.from.length>r&&(r=u.from.length)})}),t+=2;let o=[],n="Package".padEnd(t),i="From".padEnd(r),c=`
   ${n} ${i}${"To".padStart(r)}`;o.push(new K.Separator(c)),e.patch.length>0&&(o.push(new K.Separator(Ne.reset.bold.blue(`
Patch Updates`))),e.patch.forEach(p=>{o.push({name:`${p.name.padEnd(t)} ${p.from.padStart(r)} -> ${p.to}`,value:`${p.name}@${p.to}`})})),e.minor.length>0&&(o.push(new K.Separator(Ne.reset.bold.blue(`
Minor Updates`))),e.minor.forEach(p=>{o.push({name:`${p.name.padEnd(t)} ${p.from.padStart(r)} -> ${p.to}`,value:`${p.name}@${p.to}`})})),e.major.length>0&&(o.push(new K.Separator(Ne.reset.bold.blue(`
Major Updates`))),e.major.forEach(p=>{o.push({name:`${p.name.padEnd(t)} ${p.from.padStart(r)} -> ${p.to}`,value:`${p.name}@${p.to}`})}));let g=o.length+6;return{choices:o,pageSize:g}};var Yo=e=>e.command("update").description("Interactively select and update all `Refine` packages to selected version. To skip the interactive mode, use the `--all` option.").addOption(new Ho("-t, --tag [tag]","Select version to update to.").choices(["next","latest"]).default("wanted","Version ranges in the `package.json` will be installed")).option("-a, --all","Update all `Refine` packages to the selected `tag`. If `tag` is not provided, version ranges in the `package.json` will be installed. This option skips the interactive mode.",!1).option("-d, --dry-run","Get outdated packages installation command without automatic updating. If `tag` is not provided, version ranges in the `package.json` will be used.",!1).action(Ko),Ko=async e=>{let{tag:t,dryRun:r,all:o}=e,n=await S(H,"Checking for updates...");if(!(n!=null&&n.length)){console.log("All `Refine` packages are up to date \u{1F389}");return}let i=null;if(o)jt(t,n);else{let{table:s,width:c}=re(n)??"";console.log(Xo("Available Updates",c)),console.log(s);let{allByPrompt:g}=await Jo.prompt([{type:"list",name:"allByPrompt",message:"Do you want to update all Refine packages for minor and patch versions?",choices:[{name:"Yes (Recommended)",value:!0},{name:"No, use interactive mode",value:!1}]}]);g?i=jt(t,n):i=await At(n)}if(i){if(r){Go(i);return}Zo(i)}},jt=(e,t)=>e==="wanted"&&t.every(n=>n.current===n.wanted)?(console.log("All `Refine` packages are up to date with the wanted version \u{1F389}"),null):t.map(o=>{let n=e==="wanted"?o.wanted:e;return`${o.name}@${n}`}),Go=async e=>{let t=await E(),r=j[t.name].install;console.log(`${t.name} ${r.join(" ")} ${e.join(" ")}`)},Zo=e=>{console.log("Updating `Refine` packages..."),console.log(e.map(t=>` - ${t}`).join(`
`)),Q(e)},Ot=Yo;import Qo from"envinfo";import en from"ora";var tn=e=>e.command("whoami").description("View the details of the development environment").action(rn),rn=async()=>{let e=en("Loading environment details...").start(),t=await Qo.run({System:["OS","CPU"],Binaries:["Node","Yarn","npm"],Browsers:["Chrome","Firefox","Safari"]},{showNotFound:!0,markdown:!0}),o=(await _()||[]).map(n=>` - ${n.name}: ${n.version}`).join(`
`);e.stop(),console.log(t),console.log("## Refine Packages:"),console.log(o)},_t=tn;import pe from"chalk";import me from"inquirer";import un from"inquirer";import on from"execa";var ce=async e=>{let{incompatiblePackages:t,integrationName:r,requiredPackages:o,transformerFileName:n}=e;if(Le(t))return;await ze(o),console.log(`\u{1F680} Setting up ${r}...`);let i=h.resolve(".bin/jscodeshift"),{stderr:s}=on.sync(i,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/integrations/${n}.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist"]);s&&console.log(s),console.log(`\u{1F389} ${r} setup completed!`)};import Se from"chalk";var le=e=>{let{id:t,title:r,description:o,disabled:n}=e;return n?{value:t,name:`${Se.gray(r)}`,disabled:Se.redBright(n)}:{value:t,name:`${Se.blueBright(r)} - ${o}`}};var $t="ant-design",nn="Ant Design",sn=["@remix-run/react","next"],an=["antd","@refinedev/antd"],cn="ant-design",Ft={id:$t,getChoice:e=>{let t="Ant Design",r="Setup Ant Design with Refine",o;return["nextjs","remix"].includes(e)&&(o="Automatic setup only available Vite for now. See the documentation for manual installation: https://refine.dev/docs/ui-integrations/ant-design/introduction/#installation"),le({id:$t,title:t,description:r,disabled:o})},runTransformer:async()=>await ce({incompatiblePackages:sn,integrationName:nn,requiredPackages:an,transformerFileName:cn})};var Ut="react-router",ln="React Router",pn=["@remix-run/react","next"],mn=["react-router-dom","@refinedev/react-router-v6"],dn="react-router",Bt={id:Ut,getChoice:e=>{let t="React Router",r="Setup routing with React Router",o;return e==="nextjs"&&(o="Can't be used with Next.js. https://nextjs.org/docs/app/building-your-application/routing"),e==="remix"&&(o="Can't be used with Remix. https://remix.run/docs/en/main/discussion/routes"),le({id:Ut,title:t,description:r,disabled:o})},runTransformer:async()=>await ce({incompatiblePackages:pn,integrationName:ln,requiredPackages:mn,transformerFileName:dn})};var O=[Ft,Bt];var De=()=>{let e=f(),t=O.map(r=>r.getChoice(e));return t.every(r=>r.disabled)?[{value:"none",name:"No integration available for this project type."},...t]:t},Mt=async()=>await un.prompt([{type:"list",name:"id",message:"Which integration do you want to add?",choices:De(),default:"none"}]);import wn from"chalk";import xn from"inquirer";import{copySync as fn,mkdirSync as gn,pathExistsSync as hn}from"fs-extra";import{join as zt}from"path";var W=[{id:"auth",title:"Auth provider",description:"Manage user authentication and authorization",fileName:"auth-provider.tsx",templateFileName:"demo-auth-provider.tsx.template"},{id:"live",title:"Live provider",description:"Enable real-time updates and synchronization",fileName:"live-provider.tsx",templateFileName:"demo-live-provider.tsx.template"},{id:"data",title:"Data provider",description:"Communicate with your API",fileName:"data-provider.tsx",templateFileName:"demo-data-provider.tsx.template"},{id:"access-control",title:"Access Control",description:"Manage user permissions & roles",fileName:"access-control-provider.tsx",templateFileName:"demo-access-control-provider.tsx.template"},{id:"notification",title:"Notification provider",description:"Display in-app alerts and messages",fileName:"notification-provider.tsx",templateFileName:"demo-notification-provider.tsx.template"},{id:"i18n",title:"I18n provider",description:"Support multiple languages and locales",fileName:"i18n-provider.tsx",templateFileName:"demo-i18n-provider.tsx.template"},{id:"audit-log",title:"Audit Log provider",description:"Display audit logs for your resources",fileName:"audit-log-provider.tsx",templateFileName:"demo-audit-log-provider.tsx.template"}];var vn=`${__dirname}/../templates/provider`,G=(e,t)=>{e.forEach(r=>{let{fileName:o,templateFileName:n}=yn(r),i=t??Ae(),s=zt(i,o),c=zt(process.cwd(),i,o);if(hn(c)){console.error(`\u274C Provider (${s}) already exist!`);return}gn(i,{recursive:!0}),fn(`${vn}/${n}`,c),console.log(`\u{1F389} Provider (${s}) created successfully!`)})},yn=e=>{let t=W.find(r=>r.id===e);if(!t)throw new Error(`Invalid provider: ${e}`);return t},Ae=()=>{let e=f(),{path:t}=Ke(e);return t};var je=()=>W.map(e=>{let{id:t,title:r,description:o}=e;return{value:t,name:`${wn.blueBright(r)} - ${o}`}}),Lt=async()=>await xn.prompt([{type:"checkbox",name:"providers",message:"Which providers do you want to add?",choices:je()},{type:"input",name:"providersPath",message:"Where do you want to generate the providers?",default:Ae()}]);var Vt=(e,t)=>t.map(r=>({...r,name:` . ${r.name}`,value:{group:e,component:r.value}})),Wt=async()=>await me.prompt([{type:"list",name:"component",message:"What do you want to add?",choices:[new me.Separator(pe.bold("Provider")),...Vt("provider",je()),new me.Separator(pe.bold("Integration")),...Vt("integration",De()),new me.Separator(pe.bold("Resource")),{name:pe.blueBright(" .  Add new resource"),value:{group:"resource",component:"resource"}}],pageSize:25}]);import{Argument as Pn,Command as In}from"commander";var Cn=async e=>{let t=e;t||(t=(await Mt()).id);let r=O.find(o=>o.id===t);r&&await r.runTransformer()},qt=new In("integration").addArgument(new Pn("[name]","Name of the integration").choices(O.map(e=>e.id))).action(Cn);import{Argument as Rn,Command as bn}from"commander";var En=async(e,t)=>{if(!e.length){let{providers:r,providersPath:o}=await Lt();return G(r,o)}G(e,t.path)},Jt=new bn("provider").addArgument(new Rn("[providers...]","Create provider(s)").choices(W.map(e=>e.id)).default([])).option("-p, --path [path]","Path to generate providers").action(En);import{Argument as kn,Command as Tn}from"commander";var Nn=async(e,t,r)=>{F({actions:t==null?void 0:t.actions,path:r.optsWithGlobals().path},e)},Xt=new Tn("resource").addArgument(new kn("[resources...]","Create new resource(s)")).option("-p, --path [path]","Path to generated resource files").option("-a, --actions [actions]","Only generate the specified resource actions. (ex: list,create,edit,show)","list,create,edit,show").action(Nn);var Sn=e=>e.command("add").description("Add new resources, providers, or integrations").allowExcessArguments(!1).action(Dn).addCommand(Xt).addCommand(Jt).addCommand(qt),Dn=async()=>{let{component:e}=await Wt();if(e.group==="provider"&&G([e.component]),e.group==="integration"){let t=O.find(r=>r.id===e.component);await(t==null?void 0:t.runTransformer())}e.group==="resource"&&await F({},[])},Ht=Sn;import An from"envinfo";import jn from"os";var On=()=>{let e=jn.type();return{Darwin:"macOS",Linux:"Linux",Windows_NT:"Windows"}[e]},Yt=async()=>{let[e,t]=await An.helpers.getOSInfo();return{name:On(),version:t}};import _n from"node-fetch";var $n=async()=>{let e=await Yt();return{nodeEnv:U.NODE_ENV,nodeVersion:process.version,os:e.name,osVersion:e.version,command:process.argv[2],packages:await _()||[],projectFramework:f(),projectId:Me()}},Kt=async()=>{if(U.REFINE_NO_TELEMETRY!=="true")try{let e=await $n();await _n("https://telemetry.refine.dev/cli",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})}catch{}};import Fn from"gray-matter";import Un from"boxen";var Bn="https://raw.githubusercontent.com/refinedev/refine/master/packages/cli/ANNOUNCEMENTS.md",Oe="---announcement",Mn=e=>e.split(Oe).slice(1).map(r=>`${Oe}${r}`),zn=e=>{let t=e.replace(Oe,"---"),r=Fn(t),o=(r.content.length===0?t.replace(/---/g,""):r.content.replace(/---/g,"")).trim();return{...r.data,content:o}},Ln=async()=>{try{let e=await fetch(Bn).then(r=>r.text()).catch(()=>"");return Mn(e).map(r=>zn(r))}catch{return[]}},Gt=async()=>{let t=(await Ln()).filter(o=>!o.hidden);if(t.length===0)return;let r=t.map(o=>{let n=t.length>1?"\u2014 ":"",i=se(o.content);return`${n}${i}`}).join("").trim();console.log(Un(r,{padding:1,margin:0,borderStyle:"round",borderColor:"blueBright",titleAlignment:"left"}))};var qn="1.0.0",Jn=()=>{let e=new Vn;e.version(`@refinedev/cli@${qn}`,"-v, --version","Output the current version.").description(Wn.textSync("refine",{font:"Isometric1",horizontalLayout:"full",verticalLayout:"full",whitespaceBreak:!0})).usage("<command> [options]").helpOption("-h, --help","Output usage information."),Nt(e),tt(e),Ot(e),Re(e),be(e),we(e),Ee(e),Xe(e),_t(e),mt(e),Ht(e),e.hook("preAction",async t=>{t.args.includes("dev")&&await Gt()}),e.hook("postAction",t=>{let r=t.args[0];["run"].includes(r)||Kt()}),e.parse(process.argv),process.argv.slice(2).length||e.outputHelp()};Jn();
//# sourceMappingURL=cli.mjs.map